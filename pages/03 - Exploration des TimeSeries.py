import streamlit as st
import pandas as pd

from utils import load_df_sales_clean_ST, make_evolution_mensuelle_plots, kmean_par_coude, distrib_cluster
from utils import plot_explicatifs_par_cluster

#############################################################################################################
# Title
#############################################################################################################

st.title("Premi√®res explorations des s√©ries temporelles")
st.write("Prix de vente du m¬≤ sur l'ensemble de la France")

#############################################################################################################
# Load the dataset
#############################################################################################################

df_sales = load_df_sales_clean_ST()

config = {
    "_index": st.column_config.DateColumn("Date", format="MMM YYYY"),
}

st.dataframe(df_sales.sort_index().head(),column_config=config)

#############################################################################################################
# Draw the distribution of the target variable
#############################################################################################################

# st.write("### √âvolution mensuelle du prix moyen au m¬≤")    
# st.image('./images/evo_mensuelle_prix_moyen_m2.png', caption='√âvolution mensuelle du prix moyen au m¬≤',width=800)

# Data preparation for the global plot
Train_pour_graph = pd.read_csv('./data/temp/Train_pour_graph.csv', sep=';', parse_dates=['date'], on_bad_lines='skip', low_memory=False)

# Data preparation for the department plot
Train_pour_graph_cp = pd.read_csv('./data/temp/Train_pour_graph_cp.csv', sep=';',  parse_dates=['date'], on_bad_lines='skip', low_memory=False)

st.write("## √âvolution mensuelle du prix moyen au m¬≤")

fig_mensuel = make_evolution_mensuelle_plots(Train_pour_graph, Train_pour_graph_cp)
st.plotly_chart(fig_mensuel)


st.write('### Tendances g√©n√©rales :  \n')
st.write('La plupart des d√©partements montrent une stabilit√© relative dans les prix, avec des variations saisonni√®res mineures.')
st.write('Mais certains d√©partements montrent des augmentations ou des diminutions plus prononc√©es et √† certains moments')

#############################################################################################################
# Determmine the number of clusters by elbow method
#############################################################################################################

st.write("## Clustering ")
st.write('### D√©terminer le nombre de clusters (m√©thode du coude)')

df_cluster_input = pd.read_csv('./data/temp/df_cluster_input.csv', sep=';')

number_ok_cluster = st.slider("Nombre de clusters", min_value=2, max_value=10, value=2)
kmean_by_elbow = kmean_par_coude(df_cluster_input, number_ok_cluster)

st.pyplot(kmean_by_elbow)

st.write('Le point o√π l\'ajout de nouveaux clusters ne r√©duit plus significativement l\'inertie est souvent consid√©r√© comme le nombre optimal de clusters.')

#############################################################################################################
# dsitribution of the indicators by cluster
#############################################################################################################

st.write("### Distribution des indicateurs par cluster (4) ")

distrib_cluster(df_cluster_input)

st.write('\n')

st.markdown("""
| Cluster |  Couleur  | Niveau de prix |    Volatilit√©   |    Croissance (tc\_am\_reg)   | Interpr√©tation √©conomique                                       |
| :-----: | :-------: | :------------: | :-------------: | :---------------------------: | :-------------------------------------------------------------- |
|    0    |  üîµ Bleu  |   **Faible**   | **Tr√®s faible** | **Faible / parfois n√©gative** | **Zones rurales / petites villes stagnantes**                   |
|    1    | üü† Orange |  **Moyen-bas** |   **Mod√©r√©e**   |          **Mod√©r√©e**          | **P√©riph√©ries et banlieues**                   |
|    2    |  üü¢ Vert  | **Moyen-haut** |   **Mod√©r√©e**   |      **Mod√©r√©e √† bonne**      | **Centres urbains √©tablis, march√©s r√©sidentiels stables**       |
|    3    |  üî¥ Rouge | **Tr√®s √©lev√©** |    **√âlev√©e**   |           **Forte**           | **Zones tendues / sp√©culatives (luxe, hypercentre, littoral‚Ä¶)** |
""")


#############################################################################################################
# Map
#############################################################################################################
st.write('### Visualisation des clusters sur la carte')
st.image('./images/carte_clusters.png', width=600)

#############################################################################################################
# Explanations
#############################################################################################################
st.write('### Boxplots explicatifs par cluster')

geo_df = pd.read_csv('./data/temp/geo_df.csv', sep=';')

plot_explicatifs_par_cluster(geo_df)

st.markdown("""
Nous sommes bien sur les clusters suivants :

- **Cluster 3 (rouge) ‚Äî zone de luxe / tendue**
  - Clairement s√©par√© en haut √† droite de presque tous les nuages de points.
  - Prix tr√®s √©lev√©s (mean, max, min), dispersion (std) forte.
  - TCAM (tc_am_reg) souvent positif.
  - Tr√®s coh√©rent avec des zones ch√®res, touristiques ou sp√©culatives.

- **Cluster 0 (bleu) ‚Äî ville dense, mature**
  - Zones √† prix mod√©r√©ment √©lev√©s mais stables.
  - Prix moyens comparables au cluster orange, voire l√©g√®rement sup√©rieurs.
  - Variance (√©cart-type) plus faible : le march√© est plus homog√®ne.
  - TCAM souvent mod√©r√© ‚Üí zones matures et stabilis√©es, comme des centres-villes √©tablis ou zones r√©sidentielles stables.

- **Cluster 1 (orange) ‚Äî zones p√©riurbaines ou dynamiques secondaires**
  - Ville mixte, p√©riurbaine ou segment√©e.
  - Prix moyens similaires au cluster bleu.
  - Variance plus forte ‚Üí march√© plus dispers√©, peut-√™tre entre anciens et nouveaux quartiers, zones p√©riurbaines en mutation.
  - TCAM mod√©r√©ment positif ‚Üí march√©s dynamiques ou en rattrapage, mais moins structur√©s que le bleu.

- **Cluster 2 (vert) ‚Äî zones rurales / peu dynamiques**
  - Prix tr√®s bas et tr√®s homog√®nes.
  - Tr√®s peu de variance ‚Üí march√© stagnant.
  - TCAM parfois n√©gatif ‚Üí zones en d√©croissance ou stagnation.
""")




